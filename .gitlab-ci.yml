image: docker:stable

services:
  - docker:stable-dind

stages:
  - build

variables:
  DOCKER_DRIVER: overlay2
  BUILD_DIR: build/

before_script:
  - echo "${PUSH_TO_CI_REGISTRY}"
    && echo "${NO_TEST_RUN}"

  # Registry login(s)
  - echo "${REGISTRY_PASSWORD}" | docker login -u "${REGISTRY_USER}" --password-stdin
  - if [ "${PUSH_TO_CI_REGISTRY}" = true ]; then
        echo "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}";
    fi

build:
  stage: build
  script:
    - echo "${APPID}"
      && echo "${MOD}"
      && echo "${FIX_APPMANIFEST}"
      && echo "${GAME}"
      && echo "${GAME_VERSION}"
    - date

    # APPID, MOD, FIX_APPMANIFEST, GAME, GAME_VERSION to be issued as variables for build
    - docker build
        --build-arg APPID="${APPID}"
        --build-arg MOD="${MOD}"
        --build-arg FIX_APPMANIFEST="${FIX_APPMANIFEST}"
        --build-arg GAME="${GAME}"
        --build-arg GAME_VERSION="${GAME_VERSION}"
        -t "${REGISTRY_USER}/${GAME}:latest"
        -t "${REGISTRY_USER}/${GAME}:${GAME_VERSION}"
        -t "${CI_REGISTRY_IMAGE}/${GAME}:latest"
        -t "${CI_REGISTRY_IMAGE}/${GAME}:${GAME_VERSION}"
        -t "${CI_REGISTRY_IMAGE}/${GAME}:${CI_COMMIT_SHA}"
        $BUILD_DIR
    - date

    # Test the game image
    - if [ -z "${NO_TEST_RUN}" ]; then
        if [ "${APPID}" = 90 ]; then
          GAME_BIN="hlds_linux";
        else
          GAME_BIN="srcds_linux";
        fi;
        echo ${GAME_BIN};
        docker run --rm "${REGISTRY_USER}/${GAME}:latest" "printenv && ls -al && exec ${GAME_BIN} -game ${GAME} +version +exit";
      fi
    - date

    # Push the image
    - docker push "${REGISTRY_USER}/${GAME}"
    - date
    - if [ "${PUSH_TO_CI_REGISTRY}" = true ]; then
        docker push "${CI_REGISTRY_IMAGE}/${GAME}";
        date;
      fi
  only:
    - triggers

after_script:
  - docker logout
  - if [ "${PUSH_TO_CI_REGISTRY}" = true ]; then
      docker logout "${CI_REGISTRY}";
    fi