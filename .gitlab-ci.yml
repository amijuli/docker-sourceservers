image: docker:stable

services:
  - docker:stable-dind

stages:
  - setup

variables:
  DOCKER_DRIVER: overlay2
  SETUP_FOLDER_NAME: setup

before_script:
  # registry login
  - echo $REGISTRY_PASSWORD | docker login -u $REGISTRY_USER --password-stdin
  - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY

setup:
  stage: setup
  script:
    - echo $APPID
      && echo $MOD
      && echo $FIX_APPMANIFEST
      && echo $VERSION
      && echo $GAME

    # $APPID, MOD, FIX_APPMANIFEST, $VERSION, $GAME to be issued as a variable through api trigger
    - docker build
      --build-arg APPID=$APPID
      --build-arg MOD=$MOD
      --build-arg FIX_APPMANIFEST=$FIX_APPMANIFEST
      --build-arg VERSION=$VERSION
      -t "${GAME}"
      -t "${GAME}:${VERSION}"
      -t "${CI_REGISTRY_IMAGE}/${GAME}"
      -t "${CI_REGISTRY_IMAGE}/${GAME}:${VERSION}"
      -t "${CI_REGISTRY_IMAGE}/${GAME}:${CI_JOB_ID}"
      -f ./$SETUP_FOLDER_NAME/Dockerfile
      ./$SETUP_FOLDER_NAME

    - docker push "${$REGISTRY_USER}/${GAME}"
      && docker push "${$REGISTRY_USER}/${GAME}:${VERSION}"
    - docker push "${CI_REGISTRY_IMAGE}/${GAME}"
      && docker push "${CI_REGISTRY_IMAGE}/${GAME}:${VERSION}"
      && docker push "${CI_REGISTRY_IMAGE}/${GAME}:${CI_JOB_ID}"
  only:
    - triggers

after_script:
  - docker logout
  - docker logout $CI_REGISTRY